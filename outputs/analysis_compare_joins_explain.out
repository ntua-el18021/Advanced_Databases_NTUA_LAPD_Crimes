Showing explain() results for strategy:  broadcast
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [LAT#43, LON#44, DR_NO#17, Date Rptd#18, DATE OCC#251, TIME OCC#20, AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, ... 5 more fields]
   +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#43)), knownfloatingpointnormalized(normalizenanandzero(LON#44))], [knownfloatingpointnormalized(normalizenanandzero(LAT#193)), knownfloatingpointnormalized(normalizenanandzero(LON#194))], LeftOuter, BuildRight, false
      :- Union
      :  :- Project [DR_NO#17, Date Rptd#18, cast(gettimestamp(DATE OCC#19, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#251, TIME OCC#20, AREA #21 AS AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, ... 4 more fields]
      :  :  +- FileScan csv [DR_NO#17,Date Rptd#18,DATE OCC#19,TIME OCC#20,AREA #21,AREA NAME#22,Rpt Dist No#23,Part 1-2#24,Crm Cd#25,Crm Cd Desc#26,Mocodes#27,Vict Age#28,Vict Sex#29,Vict Descent#30,Premis Cd#31,Premis Desc#32,Weapon Used Cd#33,Weapon Desc#34,Status#35,Status Desc#36,Crm Cd 1#37,Crm Cd 2#38,Crm Cd 3#39,Crm Cd 4#40,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
      :  +- Project [DR_NO#120, Date Rptd#121, cast(gettimestamp(DATE OCC#122, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#433, TIME OCC#123, AREA#124, AREA NAME#125, Rpt Dist No#126, Part 1-2#127, Crm Cd#128, Crm Cd Desc#129, Mocodes#130, Vict Age#131, Vict Sex#132, Vict Descent#133, Premis Cd#134, Premis Desc#135, Weapon Used Cd#136, Weapon Desc#137, Status#138, Status Desc#139, Crm Cd 1#140, Crm Cd 2#141, Crm Cd 3#142, Crm Cd 4#143, ... 4 more fields]
      :     +- FileScan csv [DR_NO#120,Date Rptd#121,DATE OCC#122,TIME OCC#123,AREA#124,AREA NAME#125,Rpt Dist No#126,Part 1-2#127,Crm Cd#128,Crm Cd Desc#129,Mocodes#130,Vict Age#131,Vict Sex#132,Vict Descent#133,Premis Cd#134,Premis Desc#135,Weapon Used Cd#136,Weapon Desc#137,Status#138,Status Desc#139,Crm Cd 1#140,Crm Cd 2#141,Crm Cd 3#142,Crm Cd 4#143,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
      +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=110]
         +- Filter (isnotnull(LAT#193) AND isnotnull(LON#194))
            +- FileScan csv [LAT#193,LON#194,ZIPcode#195] Batched: false, DataFilters: [isnotnull(LAT#193), isnotnull(LON#194)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- BroadcastHashJoin [cast(ZIPcode#195 as int)], [Zip Code#216], LeftOuter, BuildRight, false
   :- Project [LAT#43, LON#44, DR_NO#17, Date Rptd#18, DATE OCC#251, TIME OCC#20, AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, ... 5 more fields]
   :  +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#43)), knownfloatingpointnormalized(normalizenanandzero(LON#44))], [knownfloatingpointnormalized(normalizenanandzero(LAT#193)), knownfloatingpointnormalized(normalizenanandzero(LON#194))], LeftOuter, BuildRight, false
   :     :- Union
   :     :  :- Project [DR_NO#17, Date Rptd#18, cast(gettimestamp(DATE OCC#19, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#251, TIME OCC#20, AREA #21 AS AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, ... 4 more fields]
   :     :  :  +- FileScan csv [DR_NO#17,Date Rptd#18,DATE OCC#19,TIME OCC#20,AREA #21,AREA NAME#22,Rpt Dist No#23,Part 1-2#24,Crm Cd#25,Crm Cd Desc#26,Mocodes#27,Vict Age#28,Vict Sex#29,Vict Descent#30,Premis Cd#31,Premis Desc#32,Weapon Used Cd#33,Weapon Desc#34,Status#35,Status Desc#36,Crm Cd 1#37,Crm Cd 2#38,Crm Cd 3#39,Crm Cd 4#40,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :     :  +- Project [DR_NO#120, Date Rptd#121, cast(gettimestamp(DATE OCC#122, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#434, TIME OCC#123, AREA#124, AREA NAME#125, Rpt Dist No#126, Part 1-2#127, Crm Cd#128, Crm Cd Desc#129, Mocodes#130, Vict Age#131, Vict Sex#132, Vict Descent#133, Premis Cd#134, Premis Desc#135, Weapon Used Cd#136, Weapon Desc#137, Status#138, Status Desc#139, Crm Cd 1#140, Crm Cd 2#141, Crm Cd 3#142, Crm Cd 4#143, ... 4 more fields]
   :     :     +- FileScan csv [DR_NO#120,Date Rptd#121,DATE OCC#122,TIME OCC#123,AREA#124,AREA NAME#125,Rpt Dist No#126,Part 1-2#127,Crm Cd#128,Crm Cd Desc#129,Mocodes#130,Vict Age#131,Vict Sex#132,Vict Descent#133,Premis Cd#134,Premis Desc#135,Weapon Used Cd#136,Weapon Desc#137,Status#138,Status Desc#139,Crm Cd 1#140,Crm Cd 2#141,Crm Cd 3#142,Crm Cd 4#143,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=160]
   :        +- Filter (isnotnull(LAT#193) AND isnotnull(LON#194))
   :           +- FileScan csv [LAT#193,LON#194,ZIPcode#195] Batched: false, DataFilters: [isnotnull(LAT#193), isnotnull(LON#194)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=164]
      +- Filter isnotnull(Zip Code#216)
         +- FileScan csv [Zip Code#216,Community#217,Estimated Median Income#218] Batched: false, DataFilters: [isnotnull(Zip Code#216)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [ZIPcode#195, Vict Descent#30, Estimated Median Income#218]
   +- BroadcastHashJoin [ZIPcode#195], [ZIPcode#913], Inner, BuildRight, false
      :- Project [Vict Descent#30, ZIPcode#195, Estimated Median Income#218]
      :  +- BroadcastHashJoin [cast(ZIPcode#195 as int)], [Zip Code#216], LeftOuter, BuildRight, false
      :     :- Project [Vict Descent#30, ZIPcode#195]
      :     :  +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#43)), knownfloatingpointnormalized(normalizenanandzero(LON#44))], [knownfloatingpointnormalized(normalizenanandzero(LAT#193)), knownfloatingpointnormalized(normalizenanandzero(LON#194))], Inner, BuildRight, false
      :     :     :- Union
      :     :     :  :- Project [Vict Descent#30, LAT#43, LON#44]
      :     :     :  :  +- Filter (year(cast(gettimestamp(DATE OCC#19, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :     :     :  :     +- FileScan csv [DATE OCC#19,Vict Descent#30,LAT#43,LON#44] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#19, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) a..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :     :     :  +- Project [Vict Descent#133, LAT#146, LON#147]
      :     :     :     +- Filter (year(cast(gettimestamp(DATE OCC#122, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :     :     :        +- FileScan csv [DATE OCC#122,Vict Descent#133,LAT#146,LON#147] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#122, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=984]
      :     :        +- Filter ((isnotnull(LAT#193) AND isnotnull(LON#194)) AND isnotnull(ZIPcode#195))
      :     :           +- FileScan csv [LAT#193,LON#194,ZIPcode#195] Batched: false, DataFilters: [isnotnull(LAT#193), isnotnull(LON#194), isnotnull(ZIPcode#195)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(ZIPcode)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=988]
      :        +- Filter isnotnull(Zip Code#216)
      :           +- FileScan csv [Zip Code#216,Estimated Median Income#218] Batched: false, DataFilters: [isnotnull(Zip Code#216)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=1005]
         +- Union
            :- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#925 DESC NULLS LAST], output=[ZIPcode#913])
            :  +- HashAggregate(keys=[ZIPcode#913], functions=[first(Estimated Median Income#811, false)])
            :     +- Exchange hashpartitioning(ZIPcode#913, 200), ENSURE_REQUIREMENTS, [plan_id=1000]
            :        +- HashAggregate(keys=[ZIPcode#913], functions=[partial_first(Estimated Median Income#811, false)])
            :           +- Project [ZIPcode#913, cast(regexp_replace(Estimated Median Income#916, [$,], , 1) as int) AS Estimated Median Income#811]
            :              +- BroadcastHashJoin [cast(ZIPcode#913 as int)], [Zip Code#914], Inner, BuildRight, false
            :                 :- Project [ZIPcode#913]
            :                 :  +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#881)), knownfloatingpointnormalized(normalizenanandzero(LON#882))], [knownfloatingpointnormalized(normalizenanandzero(LAT#911)), knownfloatingpointnormalized(normalizenanandzero(LON#912))], Inner, BuildRight, false
            :                 :     :- Union
            :                 :     :  :- Project [LAT#881, LON#882]
            :                 :     :  :  +- Filter ((((year(cast(gettimestamp(DATE OCC#857, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#868)) AND isnotnull(LAT#881)) AND isnotnull(LON#882))
            :                 :     :  :     +- FileScan csv [DATE OCC#857,Vict Descent#868,LAT#881,LON#882] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#857, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
            :                 :     :  +- Project [LAT#909, LON#910]
            :                 :     :     +- Filter ((((year(cast(gettimestamp(DATE OCC#885, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#896)) AND isnotnull(LAT#909)) AND isnotnull(LON#910))
            :                 :     :        +- FileScan csv [DATE OCC#885,Vict Descent#896,LAT#909,LON#910] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#885, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
            :                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=991]
            :                 :        +- Filter ((isnotnull(ZIPcode#913) AND isnotnull(LAT#911)) AND isnotnull(LON#912))
            :                 :           +- FileScan csv [LAT#911,LON#912,ZIPcode#913] Batched: false, DataFilters: [isnotnull(ZIPcode#913), isnotnull(LAT#911), isnotnull(LON#912)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(ZIPcode), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
            :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=995]
            :                    +- Filter ((isnotnull(Estimated Median Income#916) AND isnotnull(cast(regexp_replace(Estimated Median Income#916, [$,], , 1) as int))) AND isnotnull(Zip Code#914))
            :                       +- FileScan csv [Zip Code#914,Estimated Median Income#916] Batched: false, DataFilters: [isnotnull(Estimated Median Income#916), isnotnull(cast(regexp_replace(Estimated Median Income#91..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Estimated Median Income), IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
            +- Project [ZIPcode#847]
               +- Filter isnotnull(ZIPcode#847)
                  +- Scan ExistingRDD[ZIPcode#847,Estimated Median Income#848L]


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- BroadcastHashJoin [AREA#73], [PREC#1042], Inner, BuildRight, false
   :- Project [LAT#43, LON#44, DR_NO#17, Date Rptd#18, DATE OCC#251, TIME OCC#20, AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, ... 9 more fields]
   :  +- BroadcastHashJoin [cast(ZIPcode#195 as int)], [Zip Code#216], LeftOuter, BuildRight, false
   :     :- Project [LAT#43, LON#44, DR_NO#17, Date Rptd#18, DATE OCC#251, TIME OCC#20, AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, ... 5 more fields]
   :     :  +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#43)), knownfloatingpointnormalized(normalizenanandzero(LON#44))], [knownfloatingpointnormalized(normalizenanandzero(LAT#193)), knownfloatingpointnormalized(normalizenanandzero(LON#194))], LeftOuter, BuildRight, false
   :     :     :- Union
   :     :     :  :- Project [DR_NO#17, Date Rptd#18, cast(gettimestamp(DATE OCC#19, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#251, TIME OCC#20, AREA #21 AS AREA#73, AREA NAME#22, Rpt Dist No#23, Part 1-2#24, Crm Cd#25, Crm Cd Desc#26, Mocodes#27, Vict Age#28, Vict Sex#29, Vict Descent#30, Premis Cd#31, Premis Desc#32, Weapon Used Cd#33, Weapon Desc#34, Status#35, Status Desc#36, Crm Cd 1#37, Crm Cd 2#38, Crm Cd 3#39, Crm Cd 4#40, ... 4 more fields]
   :     :     :  :  +- Filter (((((((isnotnull(LAT#43) AND isnotnull(LON#44)) AND isnotnull(Weapon Used Cd#33)) AND isnotnull(year(cast(gettimestamp(DATE OCC#19, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#43 = 0.0)) AND NOT (LON#44 = 0.0)) AND RLIKE(cast(Weapon Used Cd#33 as string), ^1)) AND isnotnull(AREA #21))
   :     :     :  :     +- FileScan csv [DR_NO#17,Date Rptd#18,DATE OCC#19,TIME OCC#20,AREA #21,AREA NAME#22,Rpt Dist No#23,Part 1-2#24,Crm Cd#25,Crm Cd Desc#26,Mocodes#27,Vict Age#28,Vict Sex#29,Vict Descent#30,Premis Cd#31,Premis Desc#32,Weapon Used Cd#33,Weapon Desc#34,Status#35,Status Desc#36,Crm Cd 1#37,Crm Cd 2#38,Crm Cd 3#39,Crm Cd 4#40,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#43), isnotnull(LON#44), isnotnull(Weapon Used Cd#33), isnotnull(year(cast(gettimes..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :     :     :  +- Project [DR_NO#120, Date Rptd#121, cast(gettimestamp(DATE OCC#122, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#1128, TIME OCC#123, AREA#124, AREA NAME#125, Rpt Dist No#126, Part 1-2#127, Crm Cd#128, Crm Cd Desc#129, Mocodes#130, Vict Age#131, Vict Sex#132, Vict Descent#133, Premis Cd#134, Premis Desc#135, Weapon Used Cd#136, Weapon Desc#137, Status#138, Status Desc#139, Crm Cd 1#140, Crm Cd 2#141, Crm Cd 3#142, Crm Cd 4#143, ... 4 more fields]
   :     :     :     +- Filter (((((((isnotnull(LAT#146) AND isnotnull(LON#147)) AND isnotnull(Weapon Used Cd#136)) AND isnotnull(year(cast(gettimestamp(DATE OCC#122, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#146 = 0.0)) AND NOT (LON#147 = 0.0)) AND RLIKE(cast(Weapon Used Cd#136 as string), ^1)) AND isnotnull(AREA#124))
   :     :     :        +- FileScan csv [DR_NO#120,Date Rptd#121,DATE OCC#122,TIME OCC#123,AREA#124,AREA NAME#125,Rpt Dist No#126,Part 1-2#127,Crm Cd#128,Crm Cd Desc#129,Mocodes#130,Vict Age#131,Vict Sex#132,Vict Descent#133,Premis Cd#134,Premis Desc#135,Weapon Used Cd#136,Weapon Desc#137,Status#138,Status Desc#139,Crm Cd 1#140,Crm Cd 2#141,Crm Cd 3#142,Crm Cd 4#143,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#146), isnotnull(LON#147), isnotnull(Weapon Used Cd#136), isnotnull(year(cast(getti..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=1985]
   :     :        +- Filter (((NOT (LAT#193 = 0.0) AND NOT (LON#194 = 0.0)) AND isnotnull(LAT#193)) AND isnotnull(LON#194))
   :     :           +- FileScan csv [LAT#193,LON#194,ZIPcode#195] Batched: false, DataFilters: [NOT (LAT#193 = 0.0), NOT (LON#194 = 0.0), isnotnull(LAT#193), isnotnull(LON#194)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0)), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1989]
   :        +- Filter isnotnull(Zip Code#216)
   :           +- FileScan csv [Zip Code#216,Community#217,Estimated Median Income#218] Batched: false, DataFilters: [isnotnull(Zip Code#216)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>
   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[5, int, false] as bigint)),false), [plan_id=1993]
      +- Filter isnotnull(PREC#1042)
         +- FileScan csv [X#1037,Y#1038,FID#1039,DIVISION#1040,LOCATION#1041,PREC#1042] Batched: false, DataFilters: [isnotnull(PREC#1042)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LAPD_Police_Stations.csv], PartitionFilters: [], PushedFilters: [IsNotNull(PREC)], ReadSchema: struct<X:double,Y:double,FID:int,DIVISION:string,LOCATION:string,PREC:int>


Showing explain() results for strategy:  merge
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [LAT#1398, LON#1399, DR_NO#1372, Date Rptd#1373, DATE OCC#1606, TIME OCC#1375, AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, ... 5 more fields]
   +- SortMergeJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399))], [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549))], LeftOuter
      :- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1399)) ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399)), 200), ENSURE_REQUIREMENTS, [plan_id=2380]
      :     +- Union
      :        :- Project [DR_NO#1372, Date Rptd#1373, cast(gettimestamp(DATE OCC#1374, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#1606, TIME OCC#1375, AREA #1376 AS AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, Crm Cd 3#1394, Crm Cd 4#1395, ... 4 more fields]
      :        :  +- FileScan csv [DR_NO#1372,Date Rptd#1373,DATE OCC#1374,TIME OCC#1375,AREA #1376,AREA NAME#1377,Rpt Dist No#1378,Part 1-2#1379,Crm Cd#1380,Crm Cd Desc#1381,Mocodes#1382,Vict Age#1383,Vict Sex#1384,Vict Descent#1385,Premis Cd#1386,Premis Desc#1387,Weapon Used Cd#1388,Weapon Desc#1389,Status#1390,Status Desc#1391,Crm Cd 1#1392,Crm Cd 2#1393,Crm Cd 3#1394,Crm Cd 4#1395,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
      :        +- Project [DR_NO#1475, Date Rptd#1476, cast(gettimestamp(DATE OCC#1477, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#1788, TIME OCC#1478, AREA#1479, AREA NAME#1480, Rpt Dist No#1481, Part 1-2#1482, Crm Cd#1483, Crm Cd Desc#1484, Mocodes#1485, Vict Age#1486, Vict Sex#1487, Vict Descent#1488, Premis Cd#1489, Premis Desc#1490, Weapon Used Cd#1491, Weapon Desc#1492, Status#1493, Status Desc#1494, Crm Cd 1#1495, Crm Cd 2#1496, Crm Cd 3#1497, Crm Cd 4#1498, ... 4 more fields]
      :           +- FileScan csv [DR_NO#1475,Date Rptd#1476,DATE OCC#1477,TIME OCC#1478,AREA#1479,AREA NAME#1480,Rpt Dist No#1481,Part 1-2#1482,Crm Cd#1483,Crm Cd Desc#1484,Mocodes#1485,Vict Age#1486,Vict Sex#1487,Vict Descent#1488,Premis Cd#1489,Premis Desc#1490,Weapon Used Cd#1491,Weapon Desc#1492,Status#1493,Status Desc#1494,Crm Cd 1#1495,Crm Cd 2#1496,Crm Cd 3#1497,Crm Cd 4#1498,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
      +- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1549)) ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549)), 200), ENSURE_REQUIREMENTS, [plan_id=2381]
            +- Filter (isnotnull(LAT#1548) AND isnotnull(LON#1549))
               +- FileScan csv [LAT#1548,LON#1549,ZIPcode#1550] Batched: false, DataFilters: [isnotnull(LAT#1548), isnotnull(LON#1549)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- SortMergeJoin [cast(ZIPcode#1550 as int)], [Zip Code#1571], LeftOuter
   :- Sort [cast(ZIPcode#1550 as int) ASC NULLS FIRST], false, 0
   :  +- Exchange hashpartitioning(cast(ZIPcode#1550 as int), 200), ENSURE_REQUIREMENTS, [plan_id=2442]
   :     +- Project [LAT#1398, LON#1399, DR_NO#1372, Date Rptd#1373, DATE OCC#1606, TIME OCC#1375, AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, ... 5 more fields]
   :        +- SortMergeJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399))], [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549))], LeftOuter
   :           :- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1399)) ASC NULLS FIRST], false, 0
   :           :  +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399)), 200), ENSURE_REQUIREMENTS, [plan_id=2434]
   :           :     +- Union
   :           :        :- Project [DR_NO#1372, Date Rptd#1373, cast(gettimestamp(DATE OCC#1374, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#1606, TIME OCC#1375, AREA #1376 AS AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, Crm Cd 3#1394, Crm Cd 4#1395, ... 4 more fields]
   :           :        :  +- FileScan csv [DR_NO#1372,Date Rptd#1373,DATE OCC#1374,TIME OCC#1375,AREA #1376,AREA NAME#1377,Rpt Dist No#1378,Part 1-2#1379,Crm Cd#1380,Crm Cd Desc#1381,Mocodes#1382,Vict Age#1383,Vict Sex#1384,Vict Descent#1385,Premis Cd#1386,Premis Desc#1387,Weapon Used Cd#1388,Weapon Desc#1389,Status#1390,Status Desc#1391,Crm Cd 1#1392,Crm Cd 2#1393,Crm Cd 3#1394,Crm Cd 4#1395,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :           :        +- Project [DR_NO#1475, Date Rptd#1476, cast(gettimestamp(DATE OCC#1477, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#1789, TIME OCC#1478, AREA#1479, AREA NAME#1480, Rpt Dist No#1481, Part 1-2#1482, Crm Cd#1483, Crm Cd Desc#1484, Mocodes#1485, Vict Age#1486, Vict Sex#1487, Vict Descent#1488, Premis Cd#1489, Premis Desc#1490, Weapon Used Cd#1491, Weapon Desc#1492, Status#1493, Status Desc#1494, Crm Cd 1#1495, Crm Cd 2#1496, Crm Cd 3#1497, Crm Cd 4#1498, ... 4 more fields]
   :           :           +- FileScan csv [DR_NO#1475,Date Rptd#1476,DATE OCC#1477,TIME OCC#1478,AREA#1479,AREA NAME#1480,Rpt Dist No#1481,Part 1-2#1482,Crm Cd#1483,Crm Cd Desc#1484,Mocodes#1485,Vict Age#1486,Vict Sex#1487,Vict Descent#1488,Premis Cd#1489,Premis Desc#1490,Weapon Used Cd#1491,Weapon Desc#1492,Status#1493,Status Desc#1494,Crm Cd 1#1495,Crm Cd 2#1496,Crm Cd 3#1497,Crm Cd 4#1498,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :           +- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1549)) ASC NULLS FIRST], false, 0
   :              +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549)), 200), ENSURE_REQUIREMENTS, [plan_id=2435]
   :                 +- Filter (isnotnull(LAT#1548) AND isnotnull(LON#1549))
   :                    +- FileScan csv [LAT#1548,LON#1549,ZIPcode#1550] Batched: false, DataFilters: [isnotnull(LAT#1548), isnotnull(LON#1549)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   +- Sort [Zip Code#1571 ASC NULLS FIRST], false, 0
      +- Exchange hashpartitioning(Zip Code#1571, 200), ENSURE_REQUIREMENTS, [plan_id=2443]
         +- Filter isnotnull(Zip Code#1571)
            +- FileScan csv [Zip Code#1571,Community#1572,Estimated Median Income#1573] Batched: false, DataFilters: [isnotnull(Zip Code#1571)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [ZIPcode#1550, Vict Descent#1385, Estimated Median Income#1573]
   +- SortMergeJoin [ZIPcode#1550], [ZIPcode#2270], Inner
      :- Sort [ZIPcode#1550 ASC NULLS FIRST], false, 0
      :  +- Exchange hashpartitioning(ZIPcode#1550, 200), ENSURE_REQUIREMENTS, [plan_id=3712]
      :     +- Project [Vict Descent#1385, ZIPcode#1550, Estimated Median Income#1573]
      :        +- SortMergeJoin [cast(ZIPcode#1550 as int)], [Zip Code#1571], LeftOuter
      :           :- Sort [cast(ZIPcode#1550 as int) ASC NULLS FIRST], false, 0
      :           :  +- Exchange hashpartitioning(cast(ZIPcode#1550 as int), 200), ENSURE_REQUIREMENTS, [plan_id=3683]
      :           :     +- Project [Vict Descent#1385, ZIPcode#1550]
      :           :        +- SortMergeJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399))], [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549))], Inner
      :           :           :- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1399)) ASC NULLS FIRST], false, 0
      :           :           :  +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399)), 200), ENSURE_REQUIREMENTS, [plan_id=3675]
      :           :           :     +- Union
      :           :           :        :- Project [Vict Descent#1385, LAT#1398, LON#1399]
      :           :           :        :  +- Filter (year(cast(gettimestamp(DATE OCC#1374, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :           :           :        :     +- FileScan csv [DATE OCC#1374,Vict Descent#1385,LAT#1398,LON#1399] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#1374, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :           :           :        +- Project [Vict Descent#1488, LAT#1501, LON#1502]
      :           :           :           +- Filter (year(cast(gettimestamp(DATE OCC#1477, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :           :           :              +- FileScan csv [DATE OCC#1477,Vict Descent#1488,LAT#1501,LON#1502] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#1477, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :           :           +- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1549)) ASC NULLS FIRST], false, 0
      :           :              +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549)), 200), ENSURE_REQUIREMENTS, [plan_id=3676]
      :           :                 +- Filter ((isnotnull(LAT#1548) AND isnotnull(LON#1549)) AND isnotnull(ZIPcode#1550))
      :           :                    +- FileScan csv [LAT#1548,LON#1549,ZIPcode#1550] Batched: false, DataFilters: [isnotnull(LAT#1548), isnotnull(LON#1549), isnotnull(ZIPcode#1550)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(ZIPcode)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
      :           +- Sort [Zip Code#1571 ASC NULLS FIRST], false, 0
      :              +- Exchange hashpartitioning(Zip Code#1571, 200), ENSURE_REQUIREMENTS, [plan_id=3684]
      :                 +- Filter isnotnull(Zip Code#1571)
      :                    +- FileScan csv [Zip Code#1571,Estimated Median Income#1573] Batched: false, DataFilters: [isnotnull(Zip Code#1571)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
      +- Sort [ZIPcode#2270 ASC NULLS FIRST], false, 0
         +- Exchange hashpartitioning(ZIPcode#2270, 200), ENSURE_REQUIREMENTS, [plan_id=3713]
            +- Union
               :- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#2282 DESC NULLS LAST], output=[ZIPcode#2270])
               :  +- HashAggregate(keys=[ZIPcode#2270], functions=[first(Estimated Median Income#2166, false)])
               :     +- Exchange hashpartitioning(ZIPcode#2270, 200), ENSURE_REQUIREMENTS, [plan_id=3706]
               :        +- HashAggregate(keys=[ZIPcode#2270], functions=[partial_first(Estimated Median Income#2166, false)])
               :           +- Project [ZIPcode#2270, cast(regexp_replace(Estimated Median Income#2273, [$,], , 1) as int) AS Estimated Median Income#2166]
               :              +- SortMergeJoin [cast(ZIPcode#2270 as int)], [Zip Code#2271], Inner
               :                 :- Sort [cast(ZIPcode#2270 as int) ASC NULLS FIRST], false, 0
               :                 :  +- Exchange hashpartitioning(cast(ZIPcode#2270 as int), 200), ENSURE_REQUIREMENTS, [plan_id=3698]
               :                 :     +- Project [ZIPcode#2270]
               :                 :        +- SortMergeJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#2238)), knownfloatingpointnormalized(normalizenanandzero(LON#2239))], [knownfloatingpointnormalized(normalizenanandzero(LAT#2268)), knownfloatingpointnormalized(normalizenanandzero(LON#2269))], Inner
               :                 :           :- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#2238)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#2239)) ASC NULLS FIRST], false, 0
               :                 :           :  +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2238)), knownfloatingpointnormalized(normalizenanandzero(LON#2239)), 200), ENSURE_REQUIREMENTS, [plan_id=3690]
               :                 :           :     +- Union
               :                 :           :        :- Project [LAT#2238, LON#2239]
               :                 :           :        :  +- Filter ((((year(cast(gettimestamp(DATE OCC#2214, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#2225)) AND isnotnull(LAT#2238)) AND isnotnull(LON#2239))
               :                 :           :        :     +- FileScan csv [DATE OCC#2214,Vict Descent#2225,LAT#2238,LON#2239] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#2214, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
               :                 :           :        +- Project [LAT#2266, LON#2267]
               :                 :           :           +- Filter ((((year(cast(gettimestamp(DATE OCC#2242, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#2253)) AND isnotnull(LAT#2266)) AND isnotnull(LON#2267))
               :                 :           :              +- FileScan csv [DATE OCC#2242,Vict Descent#2253,LAT#2266,LON#2267] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#2242, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
               :                 :           +- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#2268)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#2269)) ASC NULLS FIRST], false, 0
               :                 :              +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2268)), knownfloatingpointnormalized(normalizenanandzero(LON#2269)), 200), ENSURE_REQUIREMENTS, [plan_id=3691]
               :                 :                 +- Filter ((isnotnull(ZIPcode#2270) AND isnotnull(LAT#2268)) AND isnotnull(LON#2269))
               :                 :                    +- FileScan csv [LAT#2268,LON#2269,ZIPcode#2270] Batched: false, DataFilters: [isnotnull(ZIPcode#2270), isnotnull(LAT#2268), isnotnull(LON#2269)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(ZIPcode), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
               :                 +- Sort [Zip Code#2271 ASC NULLS FIRST], false, 0
               :                    +- Exchange hashpartitioning(Zip Code#2271, 200), ENSURE_REQUIREMENTS, [plan_id=3699]
               :                       +- Filter ((isnotnull(Estimated Median Income#2273) AND isnotnull(cast(regexp_replace(Estimated Median Income#2273, [$,], , 1) as int))) AND isnotnull(Zip Code#2271))
               :                          +- FileScan csv [Zip Code#2271,Estimated Median Income#2273] Batched: false, DataFilters: [isnotnull(Estimated Median Income#2273), isnotnull(cast(regexp_replace(Estimated Median Income#2..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Estimated Median Income), IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
               +- Project [ZIPcode#2204]
                  +- Filter isnotnull(ZIPcode#2204)
                     +- Scan ExistingRDD[ZIPcode#2204,Estimated Median Income#2205L]


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- SortMergeJoin [AREA#1428], [PREC#2401], Inner
   :- Sort [AREA#1428 ASC NULLS FIRST], false, 0
   :  +- Exchange hashpartitioning(AREA#1428, 200), ENSURE_REQUIREMENTS, [plan_id=5267]
   :     +- Project [LAT#1398, LON#1399, DR_NO#1372, Date Rptd#1373, DATE OCC#1606, TIME OCC#1375, AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, ... 9 more fields]
   :        +- SortMergeJoin [cast(ZIPcode#1550 as int)], [Zip Code#1571], LeftOuter
   :           :- Sort [cast(ZIPcode#1550 as int) ASC NULLS FIRST], false, 0
   :           :  +- Exchange hashpartitioning(cast(ZIPcode#1550 as int), 200), ENSURE_REQUIREMENTS, [plan_id=5259]
   :           :     +- Project [LAT#1398, LON#1399, DR_NO#1372, Date Rptd#1373, DATE OCC#1606, TIME OCC#1375, AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, ... 5 more fields]
   :           :        +- SortMergeJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399))], [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549))], LeftOuter
   :           :           :- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1398)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1399)) ASC NULLS FIRST], false, 0
   :           :           :  +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1398)), knownfloatingpointnormalized(normalizenanandzero(LON#1399)), 200), ENSURE_REQUIREMENTS, [plan_id=5251]
   :           :           :     +- Union
   :           :           :        :- Project [DR_NO#1372, Date Rptd#1373, cast(gettimestamp(DATE OCC#1374, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#1606, TIME OCC#1375, AREA #1376 AS AREA#1428, AREA NAME#1377, Rpt Dist No#1378, Part 1-2#1379, Crm Cd#1380, Crm Cd Desc#1381, Mocodes#1382, Vict Age#1383, Vict Sex#1384, Vict Descent#1385, Premis Cd#1386, Premis Desc#1387, Weapon Used Cd#1388, Weapon Desc#1389, Status#1390, Status Desc#1391, Crm Cd 1#1392, Crm Cd 2#1393, Crm Cd 3#1394, Crm Cd 4#1395, ... 4 more fields]
   :           :           :        :  +- Filter (((((((isnotnull(LAT#1398) AND isnotnull(LON#1399)) AND isnotnull(Weapon Used Cd#1388)) AND isnotnull(year(cast(gettimestamp(DATE OCC#1374, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#1398 = 0.0)) AND NOT (LON#1399 = 0.0)) AND RLIKE(cast(Weapon Used Cd#1388 as string), ^1)) AND isnotnull(AREA #1376))
   :           :           :        :     +- FileScan csv [DR_NO#1372,Date Rptd#1373,DATE OCC#1374,TIME OCC#1375,AREA #1376,AREA NAME#1377,Rpt Dist No#1378,Part 1-2#1379,Crm Cd#1380,Crm Cd Desc#1381,Mocodes#1382,Vict Age#1383,Vict Sex#1384,Vict Descent#1385,Premis Cd#1386,Premis Desc#1387,Weapon Used Cd#1388,Weapon Desc#1389,Status#1390,Status Desc#1391,Crm Cd 1#1392,Crm Cd 2#1393,Crm Cd 3#1394,Crm Cd 4#1395,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#1398), isnotnull(LON#1399), isnotnull(Weapon Used Cd#1388), isnotnull(year(cast(ge..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :           :           :        +- Project [DR_NO#1475, Date Rptd#1476, cast(gettimestamp(DATE OCC#1477, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#2487, TIME OCC#1478, AREA#1479, AREA NAME#1480, Rpt Dist No#1481, Part 1-2#1482, Crm Cd#1483, Crm Cd Desc#1484, Mocodes#1485, Vict Age#1486, Vict Sex#1487, Vict Descent#1488, Premis Cd#1489, Premis Desc#1490, Weapon Used Cd#1491, Weapon Desc#1492, Status#1493, Status Desc#1494, Crm Cd 1#1495, Crm Cd 2#1496, Crm Cd 3#1497, Crm Cd 4#1498, ... 4 more fields]
   :           :           :           +- Filter (((((((isnotnull(LAT#1501) AND isnotnull(LON#1502)) AND isnotnull(Weapon Used Cd#1491)) AND isnotnull(year(cast(gettimestamp(DATE OCC#1477, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#1501 = 0.0)) AND NOT (LON#1502 = 0.0)) AND RLIKE(cast(Weapon Used Cd#1491 as string), ^1)) AND isnotnull(AREA#1479))
   :           :           :              +- FileScan csv [DR_NO#1475,Date Rptd#1476,DATE OCC#1477,TIME OCC#1478,AREA#1479,AREA NAME#1480,Rpt Dist No#1481,Part 1-2#1482,Crm Cd#1483,Crm Cd Desc#1484,Mocodes#1485,Vict Age#1486,Vict Sex#1487,Vict Descent#1488,Premis Cd#1489,Premis Desc#1490,Weapon Used Cd#1491,Weapon Desc#1492,Status#1493,Status Desc#1494,Crm Cd 1#1495,Crm Cd 2#1496,Crm Cd 3#1497,Crm Cd 4#1498,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#1501), isnotnull(LON#1502), isnotnull(Weapon Used Cd#1491), isnotnull(year(cast(ge..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :           :           +- Sort [knownfloatingpointnormalized(normalizenanandzero(LAT#1548)) ASC NULLS FIRST, knownfloatingpointnormalized(normalizenanandzero(LON#1549)) ASC NULLS FIRST], false, 0
   :           :              +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#1548)), knownfloatingpointnormalized(normalizenanandzero(LON#1549)), 200), ENSURE_REQUIREMENTS, [plan_id=5252]
   :           :                 +- Filter (((NOT (LAT#1548 = 0.0) AND NOT (LON#1549 = 0.0)) AND isnotnull(LAT#1548)) AND isnotnull(LON#1549))
   :           :                    +- FileScan csv [LAT#1548,LON#1549,ZIPcode#1550] Batched: false, DataFilters: [NOT (LAT#1548 = 0.0), NOT (LON#1549 = 0.0), isnotnull(LAT#1548), isnotnull(LON#1549)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0)), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   :           +- Sort [Zip Code#1571 ASC NULLS FIRST], false, 0
   :              +- Exchange hashpartitioning(Zip Code#1571, 200), ENSURE_REQUIREMENTS, [plan_id=5260]
   :                 +- Filter isnotnull(Zip Code#1571)
   :                    +- FileScan csv [Zip Code#1571,Community#1572,Estimated Median Income#1573] Batched: false, DataFilters: [isnotnull(Zip Code#1571)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>
   +- Sort [PREC#2401 ASC NULLS FIRST], false, 0
      +- Exchange hashpartitioning(PREC#2401, 200), ENSURE_REQUIREMENTS, [plan_id=5268]
         +- Filter isnotnull(PREC#2401)
            +- FileScan csv [X#2396,Y#2397,FID#2398,DIVISION#2399,LOCATION#2400,PREC#2401] Batched: false, DataFilters: [isnotnull(PREC#2401)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LAPD_Police_Stations.csv], PartitionFilters: [], PushedFilters: [IsNotNull(PREC)], ReadSchema: struct<X:double,Y:double,FID:int,DIVISION:string,LOCATION:string,PREC:int>


Showing explain() results for strategy:  shuffle_hash
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [LAT#2757, LON#2758, DR_NO#2731, Date Rptd#2732, DATE OCC#2965, TIME OCC#2734, AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, ... 5 more fields]
   +- ShuffledHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758))], [knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908))], LeftOuter, BuildRight
      :- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758)), 200), ENSURE_REQUIREMENTS, [plan_id=5981]
      :  +- Union
      :     :- Project [DR_NO#2731, Date Rptd#2732, cast(gettimestamp(DATE OCC#2733, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#2965, TIME OCC#2734, AREA #2735 AS AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, Crm Cd 3#2753, Crm Cd 4#2754, ... 4 more fields]
      :     :  +- FileScan csv [DR_NO#2731,Date Rptd#2732,DATE OCC#2733,TIME OCC#2734,AREA #2735,AREA NAME#2736,Rpt Dist No#2737,Part 1-2#2738,Crm Cd#2739,Crm Cd Desc#2740,Mocodes#2741,Vict Age#2742,Vict Sex#2743,Vict Descent#2744,Premis Cd#2745,Premis Desc#2746,Weapon Used Cd#2747,Weapon Desc#2748,Status#2749,Status Desc#2750,Crm Cd 1#2751,Crm Cd 2#2752,Crm Cd 3#2753,Crm Cd 4#2754,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
      :     +- Project [DR_NO#2834, Date Rptd#2835, cast(gettimestamp(DATE OCC#2836, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#3147, TIME OCC#2837, AREA#2838, AREA NAME#2839, Rpt Dist No#2840, Part 1-2#2841, Crm Cd#2842, Crm Cd Desc#2843, Mocodes#2844, Vict Age#2845, Vict Sex#2846, Vict Descent#2847, Premis Cd#2848, Premis Desc#2849, Weapon Used Cd#2850, Weapon Desc#2851, Status#2852, Status Desc#2853, Crm Cd 1#2854, Crm Cd 2#2855, Crm Cd 3#2856, Crm Cd 4#2857, ... 4 more fields]
      :        +- FileScan csv [DR_NO#2834,Date Rptd#2835,DATE OCC#2836,TIME OCC#2837,AREA#2838,AREA NAME#2839,Rpt Dist No#2840,Part 1-2#2841,Crm Cd#2842,Crm Cd Desc#2843,Mocodes#2844,Vict Age#2845,Vict Sex#2846,Vict Descent#2847,Premis Cd#2848,Premis Desc#2849,Weapon Used Cd#2850,Weapon Desc#2851,Status#2852,Status Desc#2853,Crm Cd 1#2854,Crm Cd 2#2855,Crm Cd 3#2856,Crm Cd 4#2857,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
      +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908)), 200), ENSURE_REQUIREMENTS, [plan_id=5982]
         +- Filter (isnotnull(LAT#2907) AND isnotnull(LON#2908))
            +- FileScan csv [LAT#2907,LON#2908,ZIPcode#2909] Batched: false, DataFilters: [isnotnull(LAT#2907), isnotnull(LON#2908)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- ShuffledHashJoin [cast(ZIPcode#2909 as int)], [Zip Code#2930], LeftOuter, BuildRight
   :- Exchange hashpartitioning(cast(ZIPcode#2909 as int), 200), ENSURE_REQUIREMENTS, [plan_id=6039]
   :  +- Project [LAT#2757, LON#2758, DR_NO#2731, Date Rptd#2732, DATE OCC#2965, TIME OCC#2734, AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, ... 5 more fields]
   :     +- ShuffledHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758))], [knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908))], LeftOuter, BuildRight
   :        :- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758)), 200), ENSURE_REQUIREMENTS, [plan_id=6033]
   :        :  +- Union
   :        :     :- Project [DR_NO#2731, Date Rptd#2732, cast(gettimestamp(DATE OCC#2733, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#2965, TIME OCC#2734, AREA #2735 AS AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, Crm Cd 3#2753, Crm Cd 4#2754, ... 4 more fields]
   :        :     :  +- FileScan csv [DR_NO#2731,Date Rptd#2732,DATE OCC#2733,TIME OCC#2734,AREA #2735,AREA NAME#2736,Rpt Dist No#2737,Part 1-2#2738,Crm Cd#2739,Crm Cd Desc#2740,Mocodes#2741,Vict Age#2742,Vict Sex#2743,Vict Descent#2744,Premis Cd#2745,Premis Desc#2746,Weapon Used Cd#2747,Weapon Desc#2748,Status#2749,Status Desc#2750,Crm Cd 1#2751,Crm Cd 2#2752,Crm Cd 3#2753,Crm Cd 4#2754,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :        :     +- Project [DR_NO#2834, Date Rptd#2835, cast(gettimestamp(DATE OCC#2836, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#3148, TIME OCC#2837, AREA#2838, AREA NAME#2839, Rpt Dist No#2840, Part 1-2#2841, Crm Cd#2842, Crm Cd Desc#2843, Mocodes#2844, Vict Age#2845, Vict Sex#2846, Vict Descent#2847, Premis Cd#2848, Premis Desc#2849, Weapon Used Cd#2850, Weapon Desc#2851, Status#2852, Status Desc#2853, Crm Cd 1#2854, Crm Cd 2#2855, Crm Cd 3#2856, Crm Cd 4#2857, ... 4 more fields]
   :        :        +- FileScan csv [DR_NO#2834,Date Rptd#2835,DATE OCC#2836,TIME OCC#2837,AREA#2838,AREA NAME#2839,Rpt Dist No#2840,Part 1-2#2841,Crm Cd#2842,Crm Cd Desc#2843,Mocodes#2844,Vict Age#2845,Vict Sex#2846,Vict Descent#2847,Premis Cd#2848,Premis Desc#2849,Weapon Used Cd#2850,Weapon Desc#2851,Status#2852,Status Desc#2853,Crm Cd 1#2854,Crm Cd 2#2855,Crm Cd 3#2856,Crm Cd 4#2857,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :        +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908)), 200), ENSURE_REQUIREMENTS, [plan_id=6034]
   :           +- Filter (isnotnull(LAT#2907) AND isnotnull(LON#2908))
   :              +- FileScan csv [LAT#2907,LON#2908,ZIPcode#2909] Batched: false, DataFilters: [isnotnull(LAT#2907), isnotnull(LON#2908)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   +- Exchange hashpartitioning(Zip Code#2930, 200), ENSURE_REQUIREMENTS, [plan_id=6040]
      +- Filter isnotnull(Zip Code#2930)
         +- FileScan csv [Zip Code#2930,Community#2931,Estimated Median Income#2932] Batched: false, DataFilters: [isnotnull(Zip Code#2930)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [ZIPcode#2909, Vict Descent#2744, Estimated Median Income#2932]
   +- ShuffledHashJoin [ZIPcode#2909], [ZIPcode#3629], Inner, BuildRight
      :- Exchange hashpartitioning(ZIPcode#2909, 200), ENSURE_REQUIREMENTS, [plan_id=7110]
      :  +- Project [Vict Descent#2744, ZIPcode#2909, Estimated Median Income#2932]
      :     +- ShuffledHashJoin [cast(ZIPcode#2909 as int)], [Zip Code#2930], LeftOuter, BuildRight
      :        :- Exchange hashpartitioning(cast(ZIPcode#2909 as int), 200), ENSURE_REQUIREMENTS, [plan_id=7087]
      :        :  +- Project [Vict Descent#2744, ZIPcode#2909]
      :        :     +- ShuffledHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758))], [knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908))], Inner, BuildRight
      :        :        :- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758)), 200), ENSURE_REQUIREMENTS, [plan_id=7081]
      :        :        :  +- Union
      :        :        :     :- Project [Vict Descent#2744, LAT#2757, LON#2758]
      :        :        :     :  +- Filter (year(cast(gettimestamp(DATE OCC#2733, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :        :        :     :     +- FileScan csv [DATE OCC#2733,Vict Descent#2744,LAT#2757,LON#2758] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#2733, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :        :        :     +- Project [Vict Descent#2847, LAT#2860, LON#2861]
      :        :        :        +- Filter (year(cast(gettimestamp(DATE OCC#2836, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :        :        :           +- FileScan csv [DATE OCC#2836,Vict Descent#2847,LAT#2860,LON#2861] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#2836, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :        :        +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908)), 200), ENSURE_REQUIREMENTS, [plan_id=7082]
      :        :           +- Filter ((isnotnull(LAT#2907) AND isnotnull(LON#2908)) AND isnotnull(ZIPcode#2909))
      :        :              +- FileScan csv [LAT#2907,LON#2908,ZIPcode#2909] Batched: false, DataFilters: [isnotnull(LAT#2907), isnotnull(LON#2908), isnotnull(ZIPcode#2909)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(ZIPcode)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
      :        +- Exchange hashpartitioning(Zip Code#2930, 200), ENSURE_REQUIREMENTS, [plan_id=7088]
      :           +- Filter isnotnull(Zip Code#2930)
      :              +- FileScan csv [Zip Code#2930,Estimated Median Income#2932] Batched: false, DataFilters: [isnotnull(Zip Code#2930)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
      +- Exchange hashpartitioning(ZIPcode#3629, 200), ENSURE_REQUIREMENTS, [plan_id=7111]
         +- Union
            :- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#3641 DESC NULLS LAST], output=[ZIPcode#3629])
            :  +- HashAggregate(keys=[ZIPcode#3629], functions=[first(Estimated Median Income#3525, false)])
            :     +- Exchange hashpartitioning(ZIPcode#3629, 200), ENSURE_REQUIREMENTS, [plan_id=7104]
            :        +- HashAggregate(keys=[ZIPcode#3629], functions=[partial_first(Estimated Median Income#3525, false)])
            :           +- Project [ZIPcode#3629, cast(regexp_replace(Estimated Median Income#3632, [$,], , 1) as int) AS Estimated Median Income#3525]
            :              +- ShuffledHashJoin [cast(ZIPcode#3629 as int)], [Zip Code#3630], Inner, BuildRight
            :                 :- Exchange hashpartitioning(cast(ZIPcode#3629 as int), 200), ENSURE_REQUIREMENTS, [plan_id=7098]
            :                 :  +- Project [ZIPcode#3629]
            :                 :     +- ShuffledHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#3597)), knownfloatingpointnormalized(normalizenanandzero(LON#3598))], [knownfloatingpointnormalized(normalizenanandzero(LAT#3627)), knownfloatingpointnormalized(normalizenanandzero(LON#3628))], Inner, BuildRight
            :                 :        :- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#3597)), knownfloatingpointnormalized(normalizenanandzero(LON#3598)), 200), ENSURE_REQUIREMENTS, [plan_id=7092]
            :                 :        :  +- Union
            :                 :        :     :- Project [LAT#3597, LON#3598]
            :                 :        :     :  +- Filter ((((year(cast(gettimestamp(DATE OCC#3573, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#3584)) AND isnotnull(LAT#3597)) AND isnotnull(LON#3598))
            :                 :        :     :     +- FileScan csv [DATE OCC#3573,Vict Descent#3584,LAT#3597,LON#3598] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#3573, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
            :                 :        :     +- Project [LAT#3625, LON#3626]
            :                 :        :        +- Filter ((((year(cast(gettimestamp(DATE OCC#3601, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#3612)) AND isnotnull(LAT#3625)) AND isnotnull(LON#3626))
            :                 :        :           +- FileScan csv [DATE OCC#3601,Vict Descent#3612,LAT#3625,LON#3626] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#3601, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
            :                 :        +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#3627)), knownfloatingpointnormalized(normalizenanandzero(LON#3628)), 200), ENSURE_REQUIREMENTS, [plan_id=7093]
            :                 :           +- Filter ((isnotnull(ZIPcode#3629) AND isnotnull(LAT#3627)) AND isnotnull(LON#3628))
            :                 :              +- FileScan csv [LAT#3627,LON#3628,ZIPcode#3629] Batched: false, DataFilters: [isnotnull(ZIPcode#3629), isnotnull(LAT#3627), isnotnull(LON#3628)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(ZIPcode), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
            :                 +- Exchange hashpartitioning(Zip Code#3630, 200), ENSURE_REQUIREMENTS, [plan_id=7099]
            :                    +- Filter ((isnotnull(Estimated Median Income#3632) AND isnotnull(cast(regexp_replace(Estimated Median Income#3632, [$,], , 1) as int))) AND isnotnull(Zip Code#3630))
            :                       +- FileScan csv [Zip Code#3630,Estimated Median Income#3632] Batched: false, DataFilters: [isnotnull(Estimated Median Income#3632), isnotnull(cast(regexp_replace(Estimated Median Income#3..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Estimated Median Income), IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
            +- Project [ZIPcode#3563]
               +- Filter isnotnull(ZIPcode#3563)
                  +- Scan ExistingRDD[ZIPcode#3563,Estimated Median Income#3564L]


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- ShuffledHashJoin [AREA#2787], [PREC#3760], Inner, BuildRight
   :- Exchange hashpartitioning(AREA#2787, 200), ENSURE_REQUIREMENTS, [plan_id=8458]
   :  +- Project [LAT#2757, LON#2758, DR_NO#2731, Date Rptd#2732, DATE OCC#2965, TIME OCC#2734, AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, ... 9 more fields]
   :     +- ShuffledHashJoin [cast(ZIPcode#2909 as int)], [Zip Code#2930], LeftOuter, BuildRight
   :        :- Exchange hashpartitioning(cast(ZIPcode#2909 as int), 200), ENSURE_REQUIREMENTS, [plan_id=8452]
   :        :  +- Project [LAT#2757, LON#2758, DR_NO#2731, Date Rptd#2732, DATE OCC#2965, TIME OCC#2734, AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, ... 5 more fields]
   :        :     +- ShuffledHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758))], [knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908))], LeftOuter, BuildRight
   :        :        :- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2757)), knownfloatingpointnormalized(normalizenanandzero(LON#2758)), 200), ENSURE_REQUIREMENTS, [plan_id=8446]
   :        :        :  +- Union
   :        :        :     :- Project [DR_NO#2731, Date Rptd#2732, cast(gettimestamp(DATE OCC#2733, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#2965, TIME OCC#2734, AREA #2735 AS AREA#2787, AREA NAME#2736, Rpt Dist No#2737, Part 1-2#2738, Crm Cd#2739, Crm Cd Desc#2740, Mocodes#2741, Vict Age#2742, Vict Sex#2743, Vict Descent#2744, Premis Cd#2745, Premis Desc#2746, Weapon Used Cd#2747, Weapon Desc#2748, Status#2749, Status Desc#2750, Crm Cd 1#2751, Crm Cd 2#2752, Crm Cd 3#2753, Crm Cd 4#2754, ... 4 more fields]
   :        :        :     :  +- Filter (((((((isnotnull(LAT#2757) AND isnotnull(LON#2758)) AND isnotnull(Weapon Used Cd#2747)) AND isnotnull(year(cast(gettimestamp(DATE OCC#2733, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#2757 = 0.0)) AND NOT (LON#2758 = 0.0)) AND RLIKE(cast(Weapon Used Cd#2747 as string), ^1)) AND isnotnull(AREA #2735))
   :        :        :     :     +- FileScan csv [DR_NO#2731,Date Rptd#2732,DATE OCC#2733,TIME OCC#2734,AREA #2735,AREA NAME#2736,Rpt Dist No#2737,Part 1-2#2738,Crm Cd#2739,Crm Cd Desc#2740,Mocodes#2741,Vict Age#2742,Vict Sex#2743,Vict Descent#2744,Premis Cd#2745,Premis Desc#2746,Weapon Used Cd#2747,Weapon Desc#2748,Status#2749,Status Desc#2750,Crm Cd 1#2751,Crm Cd 2#2752,Crm Cd 3#2753,Crm Cd 4#2754,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#2757), isnotnull(LON#2758), isnotnull(Weapon Used Cd#2747), isnotnull(year(cast(ge..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :        :        :     +- Project [DR_NO#2834, Date Rptd#2835, cast(gettimestamp(DATE OCC#2836, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#3846, TIME OCC#2837, AREA#2838, AREA NAME#2839, Rpt Dist No#2840, Part 1-2#2841, Crm Cd#2842, Crm Cd Desc#2843, Mocodes#2844, Vict Age#2845, Vict Sex#2846, Vict Descent#2847, Premis Cd#2848, Premis Desc#2849, Weapon Used Cd#2850, Weapon Desc#2851, Status#2852, Status Desc#2853, Crm Cd 1#2854, Crm Cd 2#2855, Crm Cd 3#2856, Crm Cd 4#2857, ... 4 more fields]
   :        :        :        +- Filter (((((((isnotnull(LAT#2860) AND isnotnull(LON#2861)) AND isnotnull(Weapon Used Cd#2850)) AND isnotnull(year(cast(gettimestamp(DATE OCC#2836, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#2860 = 0.0)) AND NOT (LON#2861 = 0.0)) AND RLIKE(cast(Weapon Used Cd#2850 as string), ^1)) AND isnotnull(AREA#2838))
   :        :        :           +- FileScan csv [DR_NO#2834,Date Rptd#2835,DATE OCC#2836,TIME OCC#2837,AREA#2838,AREA NAME#2839,Rpt Dist No#2840,Part 1-2#2841,Crm Cd#2842,Crm Cd Desc#2843,Mocodes#2844,Vict Age#2845,Vict Sex#2846,Vict Descent#2847,Premis Cd#2848,Premis Desc#2849,Weapon Used Cd#2850,Weapon Desc#2851,Status#2852,Status Desc#2853,Crm Cd 1#2854,Crm Cd 2#2855,Crm Cd 3#2856,Crm Cd 4#2857,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#2860), isnotnull(LON#2861), isnotnull(Weapon Used Cd#2850), isnotnull(year(cast(ge..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :        :        +- Exchange hashpartitioning(knownfloatingpointnormalized(normalizenanandzero(LAT#2907)), knownfloatingpointnormalized(normalizenanandzero(LON#2908)), 200), ENSURE_REQUIREMENTS, [plan_id=8447]
   :        :           +- Filter (((NOT (LAT#2907 = 0.0) AND NOT (LON#2908 = 0.0)) AND isnotnull(LAT#2907)) AND isnotnull(LON#2908))
   :        :              +- FileScan csv [LAT#2907,LON#2908,ZIPcode#2909] Batched: false, DataFilters: [NOT (LAT#2907 = 0.0), NOT (LON#2908 = 0.0), isnotnull(LAT#2907), isnotnull(LON#2908)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0)), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   :        +- Exchange hashpartitioning(Zip Code#2930, 200), ENSURE_REQUIREMENTS, [plan_id=8453]
   :           +- Filter isnotnull(Zip Code#2930)
   :              +- FileScan csv [Zip Code#2930,Community#2931,Estimated Median Income#2932] Batched: false, DataFilters: [isnotnull(Zip Code#2930)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>
   +- Exchange hashpartitioning(PREC#3760, 200), ENSURE_REQUIREMENTS, [plan_id=8459]
      +- Filter isnotnull(PREC#3760)
         +- FileScan csv [X#3755,Y#3756,FID#3757,DIVISION#3758,LOCATION#3759,PREC#3760] Batched: false, DataFilters: [isnotnull(PREC#3760)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LAPD_Police_Stations.csv], PartitionFilters: [], PushedFilters: [IsNotNull(PREC)], ReadSchema: struct<X:double,Y:double,FID:int,DIVISION:string,LOCATION:string,PREC:int>


Showing explain() results for strategy:  shuffle_replicate_nl
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [LAT#4116, LON#4117, DR_NO#4090, Date Rptd#4091, DATE OCC#4324, TIME OCC#4093, AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, ... 5 more fields]
   +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#4116)), knownfloatingpointnormalized(normalizenanandzero(LON#4117))], [knownfloatingpointnormalized(normalizenanandzero(LAT#4266)), knownfloatingpointnormalized(normalizenanandzero(LON#4267))], LeftOuter, BuildRight, false
      :- Union
      :  :- Project [DR_NO#4090, Date Rptd#4091, cast(gettimestamp(DATE OCC#4092, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#4324, TIME OCC#4093, AREA #4094 AS AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, Crm Cd 3#4112, Crm Cd 4#4113, ... 4 more fields]
      :  :  +- FileScan csv [DR_NO#4090,Date Rptd#4091,DATE OCC#4092,TIME OCC#4093,AREA #4094,AREA NAME#4095,Rpt Dist No#4096,Part 1-2#4097,Crm Cd#4098,Crm Cd Desc#4099,Mocodes#4100,Vict Age#4101,Vict Sex#4102,Vict Descent#4103,Premis Cd#4104,Premis Desc#4105,Weapon Used Cd#4106,Weapon Desc#4107,Status#4108,Status Desc#4109,Crm Cd 1#4110,Crm Cd 2#4111,Crm Cd 3#4112,Crm Cd 4#4113,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
      :  +- Project [DR_NO#4193, Date Rptd#4194, cast(gettimestamp(DATE OCC#4195, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#4506, TIME OCC#4196, AREA#4197, AREA NAME#4198, Rpt Dist No#4199, Part 1-2#4200, Crm Cd#4201, Crm Cd Desc#4202, Mocodes#4203, Vict Age#4204, Vict Sex#4205, Vict Descent#4206, Premis Cd#4207, Premis Desc#4208, Weapon Used Cd#4209, Weapon Desc#4210, Status#4211, Status Desc#4212, Crm Cd 1#4213, Crm Cd 2#4214, Crm Cd 3#4215, Crm Cd 4#4216, ... 4 more fields]
      :     +- FileScan csv [DR_NO#4193,Date Rptd#4194,DATE OCC#4195,TIME OCC#4196,AREA#4197,AREA NAME#4198,Rpt Dist No#4199,Part 1-2#4200,Crm Cd#4201,Crm Cd Desc#4202,Mocodes#4203,Vict Age#4204,Vict Sex#4205,Vict Descent#4206,Premis Cd#4207,Premis Desc#4208,Weapon Used Cd#4209,Weapon Desc#4210,Status#4211,Status Desc#4212,Crm Cd 1#4213,Crm Cd 2#4214,Crm Cd 3#4215,Crm Cd 4#4216,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
      +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=9022]
         +- Filter (isnotnull(LAT#4266) AND isnotnull(LON#4267))
            +- FileScan csv [LAT#4266,LON#4267,ZIPcode#4268] Batched: false, DataFilters: [isnotnull(LAT#4266), isnotnull(LON#4267)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- BroadcastHashJoin [cast(ZIPcode#4268 as int)], [Zip Code#4289], LeftOuter, BuildRight, false
   :- Project [LAT#4116, LON#4117, DR_NO#4090, Date Rptd#4091, DATE OCC#4324, TIME OCC#4093, AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, ... 5 more fields]
   :  +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#4116)), knownfloatingpointnormalized(normalizenanandzero(LON#4117))], [knownfloatingpointnormalized(normalizenanandzero(LAT#4266)), knownfloatingpointnormalized(normalizenanandzero(LON#4267))], LeftOuter, BuildRight, false
   :     :- Union
   :     :  :- Project [DR_NO#4090, Date Rptd#4091, cast(gettimestamp(DATE OCC#4092, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#4324, TIME OCC#4093, AREA #4094 AS AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, Crm Cd 3#4112, Crm Cd 4#4113, ... 4 more fields]
   :     :  :  +- FileScan csv [DR_NO#4090,Date Rptd#4091,DATE OCC#4092,TIME OCC#4093,AREA #4094,AREA NAME#4095,Rpt Dist No#4096,Part 1-2#4097,Crm Cd#4098,Crm Cd Desc#4099,Mocodes#4100,Vict Age#4101,Vict Sex#4102,Vict Descent#4103,Premis Cd#4104,Premis Desc#4105,Weapon Used Cd#4106,Weapon Desc#4107,Status#4108,Status Desc#4109,Crm Cd 1#4110,Crm Cd 2#4111,Crm Cd 3#4112,Crm Cd 4#4113,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :     :  +- Project [DR_NO#4193, Date Rptd#4194, cast(gettimestamp(DATE OCC#4195, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#4507, TIME OCC#4196, AREA#4197, AREA NAME#4198, Rpt Dist No#4199, Part 1-2#4200, Crm Cd#4201, Crm Cd Desc#4202, Mocodes#4203, Vict Age#4204, Vict Sex#4205, Vict Descent#4206, Premis Cd#4207, Premis Desc#4208, Weapon Used Cd#4209, Weapon Desc#4210, Status#4211, Status Desc#4212, Crm Cd 1#4213, Crm Cd 2#4214, Crm Cd 3#4215, Crm Cd 4#4216, ... 4 more fields]
   :     :     +- FileScan csv [DR_NO#4193,Date Rptd#4194,DATE OCC#4195,TIME OCC#4196,AREA#4197,AREA NAME#4198,Rpt Dist No#4199,Part 1-2#4200,Crm Cd#4201,Crm Cd Desc#4202,Mocodes#4203,Vict Age#4204,Vict Sex#4205,Vict Descent#4206,Premis Cd#4207,Premis Desc#4208,Weapon Used Cd#4209,Weapon Desc#4210,Status#4211,Status Desc#4212,Crm Cd 1#4213,Crm Cd 2#4214,Crm Cd 3#4215,Crm Cd 4#4216,... 4 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=9072]
   :        +- Filter (isnotnull(LAT#4266) AND isnotnull(LON#4267))
   :           +- FileScan csv [LAT#4266,LON#4267,ZIPcode#4268] Batched: false, DataFilters: [isnotnull(LAT#4266), isnotnull(LON#4267)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=9076]
      +- Filter isnotnull(Zip Code#4289)
         +- FileScan csv [Zip Code#4289,Community#4290,Estimated Median Income#4291] Batched: false, DataFilters: [isnotnull(Zip Code#4289)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Project [ZIPcode#4268, Vict Descent#4103, Estimated Median Income#4291]
   +- CartesianProduct (ZIPcode#4268 = ZIPcode#4984)
      :- Project [Vict Descent#4103, ZIPcode#4268, Estimated Median Income#4291]
      :  +- BroadcastHashJoin [cast(ZIPcode#4268 as int)], [Zip Code#4289], LeftOuter, BuildRight, false
      :     :- Project [Vict Descent#4103, ZIPcode#4268]
      :     :  +- CartesianProduct ((knownfloatingpointnormalized(normalizenanandzero(LAT#4116)) = knownfloatingpointnormalized(normalizenanandzero(LAT#4266))) AND (knownfloatingpointnormalized(normalizenanandzero(LON#4117)) = knownfloatingpointnormalized(normalizenanandzero(LON#4267))))
      :     :     :- Union
      :     :     :  :- Project [Vict Descent#4103, LAT#4116, LON#4117]
      :     :     :  :  +- Filter (year(cast(gettimestamp(DATE OCC#4092, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :     :     :  :     +- FileScan csv [DATE OCC#4092,Vict Descent#4103,LAT#4116,LON#4117] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#4092, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :     :     :  +- Project [Vict Descent#4206, LAT#4219, LON#4220]
      :     :     :     +- Filter (year(cast(gettimestamp(DATE OCC#4195, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015)
      :     :     :        +- FileScan csv [DATE OCC#4195,Vict Descent#4206,LAT#4219,LON#4220] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#4195, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
      :     :     +- Filter ((isnotnull(LAT#4266) AND isnotnull(LON#4267)) AND isnotnull(ZIPcode#4268))
      :     :        +- FileScan csv [LAT#4266,LON#4267,ZIPcode#4268] Batched: false, DataFilters: [isnotnull(LAT#4266), isnotnull(LON#4267), isnotnull(ZIPcode#4268)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(ZIPcode)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
      :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=9772]
      :        +- Filter isnotnull(Zip Code#4289)
      :           +- FileScan csv [Zip Code#4289,Estimated Median Income#4291] Batched: false, DataFilters: [isnotnull(Zip Code#4289)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
      +- Union
         :- TakeOrderedAndProject(limit=3, orderBy=[Estimated Median Income#4996 DESC NULLS LAST], output=[ZIPcode#4984])
         :  +- HashAggregate(keys=[ZIPcode#4984], functions=[first(Estimated Median Income#4884, false)])
         :     +- Exchange hashpartitioning(ZIPcode#4984, 200), ENSURE_REQUIREMENTS, [plan_id=9775]
         :        +- HashAggregate(keys=[ZIPcode#4984], functions=[partial_first(Estimated Median Income#4884, false)])
         :           +- Project [ZIPcode#4984, cast(regexp_replace(Estimated Median Income#4987, [$,], , 1) as int) AS Estimated Median Income#4884]
         :              +- CartesianProduct (cast(ZIPcode#4984 as int) = Zip Code#4985)
         :                 :- Project [ZIPcode#4984]
         :                 :  +- CartesianProduct ((knownfloatingpointnormalized(normalizenanandzero(LAT#4952)) = knownfloatingpointnormalized(normalizenanandzero(LAT#4982))) AND (knownfloatingpointnormalized(normalizenanandzero(LON#4953)) = knownfloatingpointnormalized(normalizenanandzero(LON#4983))))
         :                 :     :- Union
         :                 :     :  :- Project [LAT#4952, LON#4953]
         :                 :     :  :  +- Filter ((((year(cast(gettimestamp(DATE OCC#4928, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#4939)) AND isnotnull(LAT#4952)) AND isnotnull(LON#4953))
         :                 :     :  :     +- FileScan csv [DATE OCC#4928,Vict Descent#4939,LAT#4952,LON#4953] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#4928, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
         :                 :     :  +- Project [LAT#4980, LON#4981]
         :                 :     :     +- Filter ((((year(cast(gettimestamp(DATE OCC#4956, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)) = 2015) AND isnotnull(Vict Descent#4967)) AND isnotnull(LAT#4980)) AND isnotnull(LON#4981))
         :                 :     :        +- FileScan csv [DATE OCC#4956,Vict Descent#4967,LAT#4980,LON#4981] Batched: false, DataFilters: [(year(cast(gettimestamp(DATE OCC#4956, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false)..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(Vict Descent), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<DATE OCC:string,Vict Descent:string,LAT:double,LON:double>
         :                 :     +- Filter ((isnotnull(ZIPcode#4984) AND isnotnull(LAT#4982)) AND isnotnull(LON#4983))
         :                 :        +- FileScan csv [LAT#4982,LON#4983,ZIPcode#4984] Batched: false, DataFilters: [isnotnull(ZIPcode#4984), isnotnull(LAT#4982), isnotnull(LON#4983)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [IsNotNull(ZIPcode), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
         :                 +- Filter ((isnotnull(Estimated Median Income#4987) AND isnotnull(cast(regexp_replace(Estimated Median Income#4987, [$,], , 1) as int))) AND isnotnull(Zip Code#4985))
         :                    +- FileScan csv [Zip Code#4985,Estimated Median Income#4987] Batched: false, DataFilters: [isnotnull(Estimated Median Income#4987), isnotnull(cast(regexp_replace(Estimated Median Income#4..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Estimated Median Income), IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Estimated Median Income:string>
         +- Project [ZIPcode#4918]
            +- Filter isnotnull(ZIPcode#4918)
               +- Scan ExistingRDD[ZIPcode#4918,Estimated Median Income#4919L]


== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- CartesianProduct (AREA#4146 = PREC#5110)
   :- Project [LAT#4116, LON#4117, DR_NO#4090, Date Rptd#4091, DATE OCC#4324, TIME OCC#4093, AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, ... 9 more fields]
   :  +- BroadcastHashJoin [cast(ZIPcode#4268 as int)], [Zip Code#4289], LeftOuter, BuildRight, false
   :     :- Project [LAT#4116, LON#4117, DR_NO#4090, Date Rptd#4091, DATE OCC#4324, TIME OCC#4093, AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, ... 5 more fields]
   :     :  +- BroadcastHashJoin [knownfloatingpointnormalized(normalizenanandzero(LAT#4116)), knownfloatingpointnormalized(normalizenanandzero(LON#4117))], [knownfloatingpointnormalized(normalizenanandzero(LAT#4266)), knownfloatingpointnormalized(normalizenanandzero(LON#4267))], LeftOuter, BuildRight, false
   :     :     :- Union
   :     :     :  :- Project [DR_NO#4090, Date Rptd#4091, cast(gettimestamp(DATE OCC#4092, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#4324, TIME OCC#4093, AREA #4094 AS AREA#4146, AREA NAME#4095, Rpt Dist No#4096, Part 1-2#4097, Crm Cd#4098, Crm Cd Desc#4099, Mocodes#4100, Vict Age#4101, Vict Sex#4102, Vict Descent#4103, Premis Cd#4104, Premis Desc#4105, Weapon Used Cd#4106, Weapon Desc#4107, Status#4108, Status Desc#4109, Crm Cd 1#4110, Crm Cd 2#4111, Crm Cd 3#4112, Crm Cd 4#4113, ... 4 more fields]
   :     :     :  :  +- Filter (((((((isnotnull(LAT#4116) AND isnotnull(LON#4117)) AND isnotnull(Weapon Used Cd#4106)) AND isnotnull(year(cast(gettimestamp(DATE OCC#4092, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#4116 = 0.0)) AND NOT (LON#4117 = 0.0)) AND RLIKE(cast(Weapon Used Cd#4106 as string), ^1)) AND isnotnull(AREA #4094))
   :     :     :  :     +- FileScan csv [DR_NO#4090,Date Rptd#4091,DATE OCC#4092,TIME OCC#4093,AREA #4094,AREA NAME#4095,Rpt Dist No#4096,Part 1-2#4097,Crm Cd#4098,Crm Cd Desc#4099,Mocodes#4100,Vict Age#4101,Vict Sex#4102,Vict Descent#4103,Premis Cd#4104,Premis Desc#4105,Weapon Used Cd#4106,Weapon Desc#4107,Status#4108,Status Desc#4109,Crm Cd 1#4110,Crm Cd 2#4111,Crm Cd 3#4112,Crm Cd 4#4113,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#4116), isnotnull(LON#4117), isnotnull(Weapon Used Cd#4106), isnotnull(year(cast(ge..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2010_to_20..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA :int,AREA NAME:string,Rpt Dis...
   :     :     :  +- Project [DR_NO#4193, Date Rptd#4194, cast(gettimestamp(DATE OCC#4195, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date) AS DATE OCC#5196, TIME OCC#4196, AREA#4197, AREA NAME#4198, Rpt Dist No#4199, Part 1-2#4200, Crm Cd#4201, Crm Cd Desc#4202, Mocodes#4203, Vict Age#4204, Vict Sex#4205, Vict Descent#4206, Premis Cd#4207, Premis Desc#4208, Weapon Used Cd#4209, Weapon Desc#4210, Status#4211, Status Desc#4212, Crm Cd 1#4213, Crm Cd 2#4214, Crm Cd 3#4215, Crm Cd 4#4216, ... 4 more fields]
   :     :     :     +- Filter (((((((isnotnull(LAT#4219) AND isnotnull(LON#4220)) AND isnotnull(Weapon Used Cd#4209)) AND isnotnull(year(cast(gettimestamp(DATE OCC#4195, M/d/yyyy hh:mm:ss a, TimestampType, Some(Etc/UTC), false) as date)))) AND NOT (LAT#4219 = 0.0)) AND NOT (LON#4220 = 0.0)) AND RLIKE(cast(Weapon Used Cd#4209 as string), ^1)) AND isnotnull(AREA#4197))
   :     :     :        +- FileScan csv [DR_NO#4193,Date Rptd#4194,DATE OCC#4195,TIME OCC#4196,AREA#4197,AREA NAME#4198,Rpt Dist No#4199,Part 1-2#4200,Crm Cd#4201,Crm Cd Desc#4202,Mocodes#4203,Vict Age#4204,Vict Sex#4205,Vict Descent#4206,Premis Cd#4207,Premis Desc#4208,Weapon Used Cd#4209,Weapon Desc#4210,Status#4211,Status Desc#4212,Crm Cd 1#4213,Crm Cd 2#4214,Crm Cd 3#4215,Crm Cd 4#4216,... 4 more fields] Batched: false, DataFilters: [isnotnull(LAT#4219), isnotnull(LON#4220), isnotnull(Weapon Used Cd#4209), isnotnull(year(cast(ge..., Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/Crime_Data_from_2020_to_Pr..., PartitionFilters: [], PushedFilters: [IsNotNull(LAT), IsNotNull(LON), IsNotNull(Weapon Used Cd), Not(EqualTo(LAT,0.0)), Not(EqualTo(LO..., ReadSchema: struct<DR_NO:int,Date Rptd:string,DATE OCC:string,TIME OCC:int,AREA:int,AREA NAME:string,Rpt Dist...
   :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(knownfloatingpointnormalized(normalizenanandzero(input[0, double, false])), knownfloatingpointnormalized(normalizenanandzero(input[1, double, false]))),false), [plan_id=10306]
   :     :        +- Filter (((NOT (LAT#4266 = 0.0) AND NOT (LON#4267 = 0.0)) AND isnotnull(LAT#4266)) AND isnotnull(LON#4267))
   :     :           +- FileScan csv [LAT#4266,LON#4267,ZIPcode#4268] Batched: false, DataFilters: [NOT (LAT#4266 = 0.0), NOT (LON#4267 = 0.0), isnotnull(LAT#4266), isnotnull(LON#4267)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/revgecoding.csv], PartitionFilters: [], PushedFilters: [Not(EqualTo(LAT,0.0)), Not(EqualTo(LON,0.0)), IsNotNull(LAT), IsNotNull(LON)], ReadSchema: struct<LAT:double,LON:double,ZIPcode:string>
   :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10310]
   :        +- Filter isnotnull(Zip Code#4289)
   :           +- FileScan csv [Zip Code#4289,Community#4290,Estimated Median Income#4291] Batched: false, DataFilters: [isnotnull(Zip Code#4289)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LA_income_2015.csv], PartitionFilters: [], PushedFilters: [IsNotNull(Zip Code)], ReadSchema: struct<Zip Code:int,Community:string,Estimated Median Income:string>
   +- Filter isnotnull(PREC#5110)
      +- FileScan csv [X#5105,Y#5106,FID#5107,DIVISION#5108,LOCATION#5109,PREC#5110] Batched: false, DataFilters: [isnotnull(PREC#5110)], Format: CSV, Location: InMemoryFileIndex(1 paths)[hdfs://local-master:54310/user/user/dataset/LAPD_Police_Stations.csv], PartitionFilters: [], PushedFilters: [IsNotNull(PREC)], ReadSchema: struct<X:double,Y:double,FID:int,DIVISION:string,LOCATION:string,PREC:int>


